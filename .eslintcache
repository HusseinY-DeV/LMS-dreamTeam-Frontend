<<<<<<< HEAD
[{"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/index.js":"1","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/App.js":"2","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/ProtectedRoute.js":"3","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Login/Login.js":"4","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Dashboard/Dashboard.js":"5","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Student/Students.js":"6","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Admins.js":"7","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Section/Sections.js":"8","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Class/Classes.js":"9","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Report/Reports.js":"10","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/Drawer.js":"11","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Row.js":"12","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddSuccessModal.js":"13","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddModal.js":"14","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateModal.js":"15","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteModal.js":"16","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateSuccessModal.js":"17","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteSuccessModal.js":"18","/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/api/api.js":"19"},{"size":141,"mtime":1610006876656,"results":"20","hashOfConfig":"21"},{"size":1304,"mtime":1609920818565,"results":"22","hashOfConfig":"21"},{"size":278,"mtime":1609920818565,"results":"23","hashOfConfig":"21"},{"size":124,"mtime":1609920818569,"results":"24","hashOfConfig":"21"},{"size":1508,"mtime":1609920818565,"results":"25","hashOfConfig":"21"},{"size":1504,"mtime":1609920818569,"results":"26","hashOfConfig":"21"},{"size":10912,"mtime":1610384483152,"results":"27","hashOfConfig":"21"},{"size":1502,"mtime":1609920818569,"results":"28","hashOfConfig":"21"},{"size":1500,"mtime":1609920818565,"results":"29","hashOfConfig":"21"},{"size":1500,"mtime":1609920818569,"results":"30","hashOfConfig":"21"},{"size":4952,"mtime":1609920818565,"results":"31","hashOfConfig":"21"},{"size":2152,"mtime":1609933105669,"results":"32","hashOfConfig":"21"},{"size":1546,"mtime":1609920818565,"results":"33","hashOfConfig":"21"},{"size":3937,"mtime":1609920818565,"results":"34","hashOfConfig":"21"},{"size":4004,"mtime":1609920818565,"results":"35","hashOfConfig":"21"},{"size":1801,"mtime":1609920818565,"results":"36","hashOfConfig":"21"},{"size":1569,"mtime":1609920818565,"results":"37","hashOfConfig":"21"},{"size":1572,"mtime":1609920818565,"results":"38","hashOfConfig":"21"},{"size":1124,"mtime":1609920818565,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p6kuu2",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/index.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/App.js",[],["80","81"],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/ProtectedRoute.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Login/Login.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Dashboard/Dashboard.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Student/Students.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Admins.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Section/Sections.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Class/Classes.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Report/Reports.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/Drawer.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Row.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddSuccessModal.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddModal.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateModal.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteModal.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateSuccessModal.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteSuccessModal.js",[],"/home/dev-huzz/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/api/api.js",[],["82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"86","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],"no-global-assign","no-unsafe-negation"]
=======
[{"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/index.js":"1","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/App.js":"2","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/ProtectedRoute.js":"3","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/Drawer.js":"4","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Login/Login.js":"5","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Section/Sections.js":"6","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Dashboard/Dashboard.js":"7","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Admins.js":"8","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/Classes.js":"9","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/Students.js":"10","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Report/Reports.js":"11","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/api/api.js":"12","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Row.js":"13","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddModal.js":"14","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddSuccessModal.js":"15","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteModal.js":"16","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateModal.js":"17","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateSuccessModal.js":"18","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteSuccessModal.js":"19","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/api/api.js":"20","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/Row.js":"21","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/Row.js":"22","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/api/api.js":"23","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/AddModal.js":"24","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Section/api/api.js":"25","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/AddSuccessModal.js":"26","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/DeleteModal.js":"27","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/DeleteSuccessModal.js":"28","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/UpdateModal.js":"29","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/UpdateSuccessModal.js":"30"},{"size":141,"mtime":1609303254377,"results":"31","hashOfConfig":"32"},{"size":1304,"mtime":1609851314782,"results":"33","hashOfConfig":"32"},{"size":278,"mtime":1609834758338,"results":"34","hashOfConfig":"32"},{"size":4952,"mtime":1609859444156,"results":"35","hashOfConfig":"32"},{"size":124,"mtime":1609851229713,"results":"36","hashOfConfig":"32"},{"size":1502,"mtime":1609851254574,"results":"37","hashOfConfig":"32"},{"size":1508,"mtime":1609851253304,"results":"38","hashOfConfig":"32"},{"size":11265,"mtime":1610293634540,"results":"39","hashOfConfig":"32"},{"size":3997,"mtime":1609927178113,"results":"40","hashOfConfig":"32"},{"size":6068,"mtime":1610300417477,"results":"41","hashOfConfig":"32"},{"size":1500,"mtime":1609851393539,"results":"42","hashOfConfig":"32"},{"size":1124,"mtime":1609853043789,"results":"43","hashOfConfig":"32"},{"size":2152,"mtime":1609859438966,"results":"44","hashOfConfig":"32"},{"size":3937,"mtime":1609856802175,"results":"45","hashOfConfig":"32"},{"size":1546,"mtime":1609856902046,"results":"46","hashOfConfig":"32"},{"size":1801,"mtime":1609857077375,"results":"47","hashOfConfig":"32"},{"size":4004,"mtime":1609857456944,"results":"48","hashOfConfig":"32"},{"size":1569,"mtime":1609857562425,"results":"49","hashOfConfig":"32"},{"size":1572,"mtime":1609857238377,"results":"50","hashOfConfig":"32"},{"size":184,"mtime":1609926579185,"results":"51","hashOfConfig":"32"},{"size":1950,"mtime":1609927330541,"results":"52","hashOfConfig":"32"},{"size":2802,"mtime":1610300423660,"results":"53","hashOfConfig":"32"},{"size":1941,"mtime":1610302918674,"results":"54","hashOfConfig":"32"},{"size":9694,"mtime":1610302718712,"results":"55","hashOfConfig":"32"},{"size":188,"mtime":1610172002867,"results":"56","hashOfConfig":"32"},{"size":1678,"mtime":1610302708152,"results":"57","hashOfConfig":"32"},{"size":2817,"mtime":1610296340678,"results":"58","hashOfConfig":"32"},{"size":1586,"mtime":1610295156770,"results":"59","hashOfConfig":"32"},{"size":10588,"mtime":1610303410506,"results":"60","hashOfConfig":"32"},{"size":1711,"mtime":1610303643546,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"p1ynda",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/index.js",[],["129","130"],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/App.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/ProtectedRoute.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/Drawer.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Login/Login.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Section/Sections.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Dashboard/Dashboard.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Admins.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/Classes.js",["131","132"],"import React, { useState, useEffect } from 'react';\nimport Drawer from '../../Drawer';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Row from './Row';\nimport { getAllClassesApi } from './api/api';\n\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 650,\n  },\n}))\n\nconst Classes = () => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(true);\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [dataChange, setDataChange] = useState(true);\n  const [addClassModal, setAddClassModal] = useState(false);\n\n  useEffect(() => {\n    let active = true;\n    (async () => {\n      setLoading(true);\n      const data = await getAllClassesApi(page);\n      if (!active) {\n        return;\n      }\n      console.log(data);\n      setTotal(Math.ceil(data.total / 10));\n      setRows(data.data);\n      setLoading(false);\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [page, dataChange]);\n\n\n  return (\n    <div className={classes.container}>\n      <Drawer view=\"Classes\" open={[open, setOpen]} />\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n\n        <Button\n          style={{ marginBottom: \"20px\" }}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.button}\n          startIcon={<AddCircleIcon />}\n          onClick={() => setAddClassModal(true)}\n        >\n          Add Class\n      </Button>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                {['Name', 'Created', 'Updated'].map((cell, key) => (\n                  <TableCell key={key} size=\"small\" align=\"left\">{cell}</TableCell>\n                ))}\n                <TableCell size=\"small\" align=\"left\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row, key) =>\n                <Row key={key} props={{\n                  row\n                }} />\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <div style={{ marginTop: 45, display: 'flex', justifyContent: 'center' }}>\n          {loading && <p>Loading...</p>}\n          {rows.length > 0 && <Pagination color=\"primary\" count={total} page={page} onChange={(e, value) => setPage(value)} />}\n\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default Classes\n","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/Students.js",["133","134"],"import React, { useState, useEffect } from 'react'\nimport Drawer from '../../Drawer'\nimport clsx from 'clsx';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Row from './Row';\nimport { getAllStudentsApi } from './api/api'\nimport AddModal from './modals/AddModal'\nimport DeleteModal from './modals/DeleteModal'\nimport UpdateModal from './modals/UpdateModal'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 650,\n  },\n}))\n\nconst Students = () => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(true);\n\n  const [page, setPage] = useState(1);\n\n  const [rows, setRows] = useState([]);\n\n  const [total, setTotal] = useState(0);\n\n  const [loading, setLoading] = useState(null);\n\n  const [dataChange, setDataChange] = React.useState(false);\n\n  const [addStudentModal, setAddStudentModal] = useState(false);\n\n  const [updateStudentModal, setUpdateStudentModal] = useState(false);\n\n  const [updateStudentSuccessModal, setUpdateStudentSuccessModal] = useState(false);\n\n  const [deleteStudentModal, setDeleteStudentModal] = useState(false);\n\n  const [deletedId, setDeletedId] = React.useState(null);\n  const [deletedFname, setDeletedFname] = React.useState(null);\n  const [deletedLname, setDeletedLname] = React.useState(null);\n\n  const [updateId, setUpdateId] = useState(null);\n\n  useEffect(() => {\n    let active = true;\n    (async () => {\n      setLoading(true);\n      const data = await getAllStudentsApi(page);\n      if (!active) {\n        return;\n      }\n\n      setTotal(Math.ceil(data.total / 10));\n      setRows(data.data);\n      setLoading(false);\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [page, dataChange]);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const handleAddStudentModalOpen = () => {\n    setAddStudentModal(true);\n  }\n\n  const handleAddStudentModalClose = () => {\n    setAddStudentModal(false);\n  }\n\n  const handleUpdateStudentModalOpen = () => {\n    setUpdateStudentModal(true);\n  }\n\n  const handleUpdateStudentModalClose = () => {\n    setUpdateStudentModal(false);\n  }\n\n  const handleDeleteStudentModalOpen = () => {\n    setDeleteStudentModal(true);\n  }\n\n  const handleDeleteStudentModalClose = () => {\n    setDeleteStudentModal(false);\n  }\n\n  return (\n    <div className={classes.container}>\n      <Drawer view=\"Students\" open={[open, setOpen]} />\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Button\n          style={{ marginBottom: \"20px\" }}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.button}\n          startIcon={<AddCircleIcon />}\n          onClick={handleAddStudentModalOpen}\n        >\n          Add Student\n        </Button>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                {['ID', 'First Name', 'Last Name', 'Email', 'Phone', 'Section', 'Class'].map((cell, key) => (\n                  <TableCell style={{ fontSize: 12 }} key={key} size=\"small\" align=\"left\">{cell}</TableCell>\n                ))}\n                <TableCell size=\"small\" align=\"left\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row, key) =>\n                <Row key={key} props={{\n                  row,\n                  setDeletedId,\n                  setDeletedFname,\n                  setDeletedLname,\n                  setUpdateId,\n                  handleDeleteStudentModalOpen,\n                  handleUpdateStudentModalOpen\n                }} />\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <div style={{ marginTop: 45, display: 'flex', justifyContent: 'center' }}>\n          {loading && <p>Loading...</p>}\n          {rows.length > 0 && <Pagination color=\"primary\" count={total} page={page} onChange={handlePageChange} />}\n\n        </div>\n        {addStudentModal && <AddModal props={{\n          addStudentModal,\n          handleAddStudentModalClose,\n          setDataChange\n        }} />}\n        {updateStudentModal && <UpdateModal props={{\n          updateStudentModal,\n          handleUpdateStudentModalClose,\n          updateId,\n          setDataChange\n        }} />}\n        {deleteStudentModal && <DeleteModal props={{\n          deleteStudentModal,\n          handleDeleteStudentModalClose,\n          deletedId,\n          deletedFname,\n          deletedLname,\n          setDataChange,\n          length: rows.length,\n          setPage\n        }} />}\n      </main>\n    </div>\n  )\n}\n\nexport default Students\n","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Report/Reports.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/api/api.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Row.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddSuccessModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateSuccessModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteSuccessModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/api/api.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/Row.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/Row.js",["135","136","137"],"import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst TableRows = ({ props }) => {\n\n  const {\n    row,\n    setDeletedId,\n    setDeletedFname,\n    setDeletedLname,\n    setUpdateId,\n    handleDeleteStudentModalOpen,\n    handleUpdateStudentModalOpen,\n\n  } = props;\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }))\n  const classes = useStyles()\n\n  const created = new Date(row.created_at);\n  const updated = new Date(row.updated_at);\n  return (\n    <TableRow key={row.id}>\n      <TableCell style={{ fontSize: 12 }} size=\"small\" align=\"left\">\n        {row.student_id}\n      </TableCell>\n      <TableCell style={{ fontSize: 12 }} size=\"small\" align=\"left\">\n        {row.first_name}\n      </TableCell>\n      <TableCell style={{ fontSize: 12 }} size=\"small\" align=\"left\">\n        {row.last_name}\n      </TableCell>\n      <TableCell style={{ fontSize: 12 }} size=\"small\" align=\"left\">\n        {row.email}\n      </TableCell>\n      <TableCell style={{ fontSize: 12 }} size=\"small\" align=\"left\">\n        {row.phone}\n      </TableCell>\n      <TableCell style={{ fontSize: 12 }} size=\"small\" align=\"left\">\n        {row.section.name}\n      </TableCell>\n      <TableCell style={{ fontSize: 12 }} size=\"small\" align=\"left\">\n        {row.section.class.name}\n      </TableCell>\n      {/* <TableCell size=\"small\" align=\"left\">\n        {`${created.getFullYear()}-${created.getMonth() + 1}-${created.getDate()}`}\n      </TableCell>\n      <TableCell size=\"small\" align=\"left\">\n        {row.created_at === row.updated_at ? 'never' : `${updated.getFullYear()}-${updated.getMonth() + 1}-${updated.getDate()}`}\n      </TableCell> */}\n      <TableCell size=\"small\" align=\"left\">\n        <Button\n          onClick={() => {\n            setUpdateId(row.id);\n            handleUpdateStudentModalOpen();\n          }}\n          variant=\"contained\"\n          color=\"default\"\n          className={classes.button}\n          startIcon={<UpdateIcon />}>\n          Update\n                      </Button>\n        <Button\n          onClick={() => {\n            setDeletedId(row.id);\n            setDeletedFname(row.first_name);\n            setDeletedLname(row.last_name);\n            handleDeleteStudentModalOpen();\n          }}\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<DeleteIcon />}\n          className={classes.button}\n        >\n          Delete\n                      </Button>\n      </TableCell>\n    </TableRow>\n  )\n}\n\nexport default TableRows\n","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/api/api.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/AddModal.js",["138"],"import React, { useState, useEffect } from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getAllSectionsNoPaginateApi } from '../../Section/api/api'\nimport { addStudentApi } from '../api/api'\nimport AddSuccessModal from './AddSuccessModal'\n\nconst AddModal = ({ props }) => {\n  const { addStudentModal, handleAddStudentModalClose, setDataChange } = props\n\n  const [addStudentSuccessModal, setAddStudentSuccessModal] = useState(false);\n\n  const handleAddStudentSuccessModalClose = () => {\n    setAddStudentSuccessModal(false);\n  };\n\n  const handleAddStudentSuccessModalOpen = () => {\n    setAddStudentSuccessModal(true);\n  };\n\n  const error = { msg: '', status: false };\n\n  const [fname, setFname] = useState('');\n  const [fnameError, setFnameError] = useState(error);\n\n  const [lname, setLname] = useState('');\n  const [lnameError, setLnameError] = useState(error);\n\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(error);\n\n  const [phone, setPhone] = useState('');\n  const [phoneError, setPhoneError] = useState(error);\n\n\n  const [sectionId, setSectionId] = useState('');\n  const [sectionError, setSectionError] = useState(error);\n\n\n  const [file, setFile] = useState(null);\n  const [fileError, setFileError] = useState(error);\n\n  const [sections, setSections] = useState([]);\n\n  useEffect(() => {\n    let active = true;\n    (async () => {\n      const data = await getAllSectionsNoPaginateApi();\n      if (!active) {\n        return;\n      }\n      setSections(data);\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, []);\n\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    select: {\n      // margin: theme.spacing(1),\n      marginBottom: 20,\n      minWidth: 120,\n    },\n  }));\n  const classes = useStyles();\n\n  const handleFormChange = e => {\n    e.target.id === \"first_name\" && setFname(e.target.value);\n    e.target.id === \"last_name\" && setLname(e.target.value);\n    e.target.id === \"email\" && setEmail(e.target.value);\n    e.target.id === \"phone\" && setPhone(e.target.value);\n  }\n\n  const handleSelectChange = e => {\n    setSectionId(e.target.value);\n  }\n\n  const addStudent = async e => {\n    setFnameError(error);\n    setLnameError(error);\n    setEmailError(error);\n    setPhoneError(error);\n    setSectionError(error);\n    setFileError(error);\n    e.preventDefault();\n    const data = await addStudentApi(fname, lname, email, phone, sectionId, file);\n    if (data.errors) {\n      if (data.errors.first_name) {\n        setFnameError({ msg: data.errors.first_name[0], status: true });\n      }\n      if (data.errors.last_name) {\n        setLnameError({ msg: data.errors.last_name[0], status: true });\n      }\n      if (data.errors.email) {\n        setEmailError({ msg: data.errors.email[0], status: true });\n      }\n      if (data.errors.phone) {\n        setPhoneError({ msg: data.errors.phone[0], status: true });\n      }\n      if (data.errors.section_id) {\n        setSectionError({ msg: \"The section is required\", status: true });\n      }\n      if (data.errors.file) {\n        setFileError({ msg: data.errors.file[0], status: true });\n      }\n      return;\n    }\n    if (data.message == \"Section is full\") {\n      setSectionError({ msg: \"Section is full\", status: true });\n      return;\n    }\n    handleAddStudentSuccessModalOpen();\n    setDataChange(prev => !prev);\n  }\n\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={addStudentModal}\n        onClose={handleAddStudentModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={addStudentModal}>\n          <div className={classes.paper}>\n            <Typography style={{ color: \"#3f51b5\" }} variant=\"h4\" component=\"h2\" gutterBottom>\n              Add Student Form\n          </Typography>\n            <form onSubmit={addStudent}>\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }} error={fnameError.status}>\n                <InputLabel htmlFor=\"first_name\">First Name</InputLabel>\n                <Input\n                  placeholder=\"e.g. john\"\n                  type=\"text\"\n                  required\n                  style={{ width: '100%' }}\n                  id=\"first_name\"\n                  value={fname}\n                  onChange={handleFormChange}\n                  aria-describedby=\"fname-text\"\n                />\n                {fnameError.status && <FormHelperText id=\"fname-error-text\">{fnameError.msg}</FormHelperText>}\n              </FormControl>\n\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }} error={lnameError.status}>\n                <InputLabel htmlFor=\"last_name\">Last Name</InputLabel>\n                <Input\n                  placeholder=\"e.g. doe\"\n                  type=\"text\"\n                  required\n                  style={{ width: '100%' }}\n                  id=\"last_name\"\n                  value={lname}\n                  onChange={handleFormChange}\n                  aria-describedby=\"lname-text\"\n                />\n                {lnameError.status && <FormHelperText id=\"lname-error-text\">{lnameError.msg}</FormHelperText>}\n              </FormControl>\n\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }} error={emailError.status}>\n                <InputLabel htmlFor=\"email\">Email</InputLabel>\n                <Input\n                  placeholder=\"e.g. johndoe@email.com\"\n                  type=\"email\"\n                  required\n                  style={{ width: '100%' }}\n                  id=\"email\"\n                  value={email}\n                  onChange={handleFormChange}\n                  aria-describedby=\"email-text\"\n                />\n                {emailError.status && <FormHelperText id=\"email-error-text\">{emailError.msg}</FormHelperText>}\n              </FormControl>\n\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }} error={phoneError.status}>\n                <InputLabel htmlFor=\"phone\">Phone</InputLabel>\n                <Input\n                  placeholder=\"e.g. 71 479 407\"\n                  type=\"text\"\n                  required\n                  style={{ width: '100%' }}\n                  id=\"phone\"\n                  value={phone}\n                  onChange={handleFormChange}\n                  aria-describedby=\"phone-text\"\n                />\n                {phoneError.status && <FormHelperText id=\"phone-error-text\">{phoneError.msg}</FormHelperText>}\n              </FormControl>\n\n              <FormControl className={classes.select} error={sectionError.status}>\n                <InputLabel id=\"demo-simple-select-label\">Section</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"section\"\n                  value={sectionId}\n                  onChange={handleSelectChange}\n                >\n                  {sections.map((section, key) => (\n                    <MenuItem key={key} value={section.id}>{section.name}</MenuItem>\n                  ))}\n                </Select>\n                {sectionError.status && <FormHelperText id=\"section-error-text\">{sectionError.msg}</FormHelperText>}\n              </FormControl>\n\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }} error={fileError.status}>\n                <Input type=\"file\" id=\"fileId\" style={{ display: 'none' }}\n                  onChange={(e) => {\n                    setFile(e.currentTarget.files[0])\n                    console.log(e.currentTarget.files[0].name);\n                  }\n                  }\n                />\n                {file && <span style={{ marginRight: 10 }}>{file.name}</span>}\n                <Button\n                  variant=\"contained\"\n                  color=\"default\"\n                  size=\"small\"\n                  className={classes.button}\n                  startIcon={<CloudUploadIcon />}\n                  onClick={() => document.getElementById('fileId').click()}\n                >Upload Image</Button>\n                {fileError.status && <FormHelperText id=\"file-error-text\">{fileError.msg}</FormHelperText>}\n              </FormControl>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Add Student\n            </Button>\n            </form>\n          </div>\n        </Fade>\n      </Modal>\n      {addStudentSuccessModal && <AddSuccessModal props={{\n        addStudentSuccessModal,\n        handleAddStudentSuccessModalClose,\n        handleAddStudentModalClose\n      }} />}\n    </>\n\n  )\n}\n\nexport default AddModal\n","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Section/api/api.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/AddSuccessModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/DeleteModal.js",["139"],"import React, { useState } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deleteStudentApi } from '../api/api'\nimport DeleteSuccessModal from './DeleteSuccessModal'\n\nconst DeleteModal = ({ props }) => {\n\n  const [deleteStudentSuccessModal, setDeleteStudentSuccessModal] = useState(false);\n\n  const handleDeleteStudentSuccessModalOpen = () => {\n    setDeleteStudentSuccessModal(true);\n  };\n\n  const handleDeleteStudentSuccessModalClose = () => {\n    setDeleteStudentSuccessModal(false);\n    handleDeleteStudentModalClose();\n  };\n\n  const {\n    deleteStudentModal,\n    handleDeleteStudentModalClose,\n    deletedId,\n    deletedFname,\n    deletedLname,\n    setDataChange,\n    length,\n    setPage\n  } = props;\n\n\n\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  }));\n  const classes = useStyles();\n\n  const deleteStudent = async () => {\n    await deleteStudentApi(deletedId);\n    if (length == 1) {\n      setPage(prev => --prev)\n      handleDeleteStudentSuccessModalOpen();\n      return;\n    }\n    setDataChange(prev => !prev);\n    handleDeleteStudentSuccessModalOpen();\n  }\n\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={deleteStudentModal}\n        onClose={handleDeleteStudentModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={deleteStudentModal}>\n          <div className={classes.paper}>\n            <span style={{ marginRight: '10px' }} id=\"transition-modal-description\">Are you sure you want to delete Student <span style={{ fontSize: '1rem', fontWeight: 'bold' }}>{deletedFname} {deletedLname}</span></span>\n            <Button style={{ marginRight: '10px' }} onClick={deleteStudent} variant=\"contained\" color=\"secondary\">\n              Yes\n                </Button>\n            <Button onClick={() => { handleDeleteStudentModalClose() }} variant=\"contained\" color=\"primary\">\n              No\n                </Button>\n          </div>\n        </Fade>\n      </Modal>\n      {deleteStudentSuccessModal && <DeleteSuccessModal props={{\n        deleteStudentSuccessModal,\n        handleDeleteStudentSuccessModalClose\n      }} />}\n    </>\n  )\n}\n\nexport default DeleteModal\n","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/DeleteSuccessModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/UpdateModal.js",["140","141"],"import React, { useState, useEffect } from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Avatar from '@material-ui/core/Avatar';\nimport { getAllSectionsNoPaginateApi } from '../../Section/api/api'\nimport { getStudentApi, updateStudentApi } from '../api/api'\nimport UpdateSuccessModal from './UpdateSuccessModal'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst UpdateModal = ({ props }) => {\n  const {\n    updateStudentModal,\n    handleUpdateStudentModalClose,\n    updateId,\n    setDataChange\n  } = props\n\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    select: {\n      // margin: theme.spacing(1),\n      marginBottom: 20,\n      minWidth: 120,\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(10),\n      height: theme.spacing(10),\n    },\n  }));\n  const classes = useStyles();\n\n  const [updateStudentSuccessModal, setUpdateStudentSuccessModal] = useState(false);\n\n\n  const handleUpdateStudentSuccessModalClose = () => {\n    setUpdateStudentSuccessModal(false);\n  };\n\n  const handleUpdateStudentSuccessModalOpen = () => {\n    setUpdateStudentSuccessModal(true);\n  };\n\n  const error = { msg: '', status: false };\n\n  const [fname, setFname] = useState('');\n  const [fnameError, setFnameError] = useState(error);\n\n  const [lname, setLname] = useState('');\n  const [lnameError, setLnameError] = useState(error);\n\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(error);\n\n  const [phone, setPhone] = useState('');\n  const [phoneError, setPhoneError] = useState(error);\n\n\n  const [sectionId, setSectionId] = useState('');\n  const [sectionError, setSectionError] = useState(error);\n\n\n  const [file, setFile] = useState(null);\n  const [fileError, setFileError] = useState(error);\n\n  const [image, setImage] = useState(null);\n\n  const [sections, setSections] = useState([]);\n\n  useEffect(() => {\n    let active = true;\n    (async () => {\n      const data = await getAllSectionsNoPaginateApi();\n      const data2 = await getStudentApi(updateId);\n      if (!active) {\n        return;\n      }\n      setSections(data);\n      setFname(data2.first_name);\n      setLname(data2.last_name);\n      setEmail(data2.email);\n      setPhone(data2.phone);\n      setImage(data2.picture);\n      setSectionId(data2.section_id)\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, []);\n\n  const handleFormChange = e => {\n    e.target.id === \"first_name\" && setFname(e.target.value);\n    e.target.id === \"last_name\" && setLname(e.target.value);\n    e.target.id === \"email\" && setEmail(e.target.value);\n    e.target.id === \"phone\" && setPhone(e.target.value);\n  }\n\n  const handleSelectChange = e => {\n    setSectionId(e.target.value);\n  }\n\n  const updateStudent = async e => {\n    e.preventDefault();\n    setFnameError(error);\n    setLnameError(error);\n    setEmailError(error);\n    setPhoneError(error);\n    setSectionError(error);\n    setFileError(error);\n    const data = await updateStudentApi(updateId, fname, lname, email, phone, sectionId, file);\n    if (data.errors) {\n      if (data.errors.first_name) {\n        setFnameError({ msg: data.errors.first_name[0], status: true });\n      }\n      if (data.errors.last_name) {\n        setLnameError({ msg: data.errors.last_name[0], status: true });\n      }\n      if (data.errors.email) {\n        setEmailError({ msg: data.errors.email[0], status: true });\n      }\n      if (data.errors.phone) {\n        setPhoneError({ msg: data.errors.phone[0], status: true });\n      }\n      if (data.errors.section_id) {\n        setSectionError({ msg: \"The section is required\", status: true });\n      }\n      if (data.errors.file) {\n        setFileError({ msg: data.errors.file[0], status: true });\n      }\n      return;\n    }\n    if (data.message == \"Section is full\") {\n      setSectionError({ msg: \"Section is full\", status: true });\n      return;\n    }\n    handleUpdateStudentSuccessModalOpen();\n    setDataChange(prev => !prev);\n  }\n\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={updateStudentModal}\n        onClose={handleUpdateStudentModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={updateStudentModal}>\n          <div className={classes.paper}>\n            <Typography style={{ color: \"#3f51b5\" }} variant=\"h4\" component=\"h2\" gutterBottom>\n              Update Student Form\n              </Typography>\n\n            {image && (\n              <div style={{ display: 'flex', justifyContent: \"center\" }}>\n                <Avatar alt=\"student\" src={`http://localhost:8000/storage/${image}`} className={classes.large} />\n              </div>\n            )}\n\n\n            <form onSubmit={updateStudent}>\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }} error={fnameError.status}>\n                <InputLabel htmlFor=\"first_name\">First Name</InputLabel>\n                <Input\n                  placeholder=\"e.g. john\"\n                  type=\"text\"\n                  required\n                  style={{ width: '100%' }}\n                  id=\"first_name\"\n                  value={fname}\n                  onChange={handleFormChange}\n                  aria-describedby=\"fname-text\"\n                />\n                {fnameError.status && <FormHelperText id=\"fname-error-text\">{fnameError.msg}</FormHelperText>}\n              </FormControl>\n\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }} error={lnameError.status}>\n                <InputLabel htmlFor=\"last_name\">Last Name</InputLabel>\n                <Input\n                  placeholder=\"e.g. doe\"\n                  type=\"text\"\n                  required\n                  style={{ width: '100%' }}\n                  id=\"last_name\"\n                  value={lname}\n                  onChange={handleFormChange}\n                  aria-describedby=\"lname-text\"\n                />\n                {lnameError.status && <FormHelperText id=\"lname-error-text\">{lnameError.msg}</FormHelperText>}\n              </FormControl>\n\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }} error={emailError.status}>\n                <InputLabel htmlFor=\"email\">Email</InputLabel>\n                <Input\n                  placeholder=\"e.g. johndoe@email.com\"\n                  type=\"email\"\n                  required\n                  style={{ width: '100%' }}\n                  id=\"email\"\n                  value={email}\n                  onChange={handleFormChange}\n                  aria-describedby=\"email-text\"\n                />\n                {emailError.status && <FormHelperText id=\"email-error-text\">{emailError.msg}</FormHelperText>}\n              </FormControl>\n\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }} error={phoneError.status}>\n                <InputLabel htmlFor=\"phone\">Phone</InputLabel>\n                <Input\n                  placeholder=\"e.g. 71 479 407\"\n                  type=\"text\"\n                  required\n                  style={{ width: '100%' }}\n                  id=\"phone\"\n                  value={phone}\n                  onChange={handleFormChange}\n                  aria-describedby=\"phone-text\"\n                />\n                {phoneError.status && <FormHelperText id=\"phone-error-text\">{phoneError.msg}</FormHelperText>}\n              </FormControl>\n\n              <FormControl className={classes.select} error={sectionError.status}>\n                <InputLabel id=\"demo-simple-select-label\">Section</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"section\"\n                  value={sectionId}\n                  onChange={handleSelectChange}\n                >\n                  {sections.map((section, key) => (\n                    <MenuItem key={key} value={section.id}>{section.name}</MenuItem>\n                  ))}\n                </Select>\n                {sectionError.status && <FormHelperText id=\"section-error-text\">{sectionError.msg}</FormHelperText>}\n              </FormControl>\n\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }} error={fileError.status}>\n                <Input type=\"file\" id=\"fileId\" style={{ display: 'none' }}\n                  onChange={(e) => {\n                    setFile(e.currentTarget.files[0])\n                    console.log(e.currentTarget.files[0].name);\n                  }\n                  }\n                />\n                {file && <span style={{ marginRight: 10 }}>{file.name}</span>}\n                <Button\n                  variant=\"contained\"\n                  color=\"default\"\n                  size=\"small\"\n                  className={classes.button}\n                  startIcon={<CloudUploadIcon />}\n                  onClick={() => document.getElementById('fileId').click()}\n                >Upload Image</Button>\n                {fileError.status && <FormHelperText id=\"file-error-text\">{fileError.msg}</FormHelperText>}\n              </FormControl>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Update Student\n            </Button>\n            </form>\n\n          </div>\n        </Fade>\n      </Modal>\n      {updateStudentSuccessModal && <UpdateSuccessModal props={{\n        updateStudentSuccessModal,\n        handleUpdateStudentSuccessModalClose,\n        handleUpdateStudentModalClose\n      }} />}\n    </>\n  )\n}\n\nexport default UpdateModal\n","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/UpdateSuccessModal.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":64,"column":22,"nodeType":"148","messageId":"149","endLine":64,"endColumn":35},{"ruleId":"146","severity":1,"message":"150","line":65,"column":10,"nodeType":"148","messageId":"149","endLine":65,"endColumn":23},{"ruleId":"146","severity":1,"message":"151","line":77,"column":10,"nodeType":"148","messageId":"149","endLine":77,"endColumn":35},{"ruleId":"146","severity":1,"message":"152","line":77,"column":37,"nodeType":"148","messageId":"149","endLine":77,"endColumn":65},{"ruleId":"146","severity":1,"message":"153","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"154","line":29,"column":9,"nodeType":"148","messageId":"149","endLine":29,"endColumn":16},{"ruleId":"146","severity":1,"message":"155","line":30,"column":9,"nodeType":"148","messageId":"149","endLine":30,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":132,"column":22,"nodeType":"158","messageId":"159","endLine":132,"endColumn":24},{"ruleId":"156","severity":1,"message":"157","line":53,"column":16,"nodeType":"158","messageId":"159","endLine":53,"endColumn":18},{"ruleId":"160","severity":1,"message":"161","line":113,"column":6,"nodeType":"162","endLine":113,"endColumn":8,"suggestions":"163"},{"ruleId":"156","severity":1,"message":"157","line":156,"column":22,"nodeType":"158","messageId":"159","endLine":156,"endColumn":24},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'setDataChange' is assigned a value but never used.","Identifier","unusedVar","'addClassModal' is assigned a value but never used.","'updateStudentSuccessModal' is assigned a value but never used.","'setUpdateStudentSuccessModal' is assigned a value but never used.","'useState' is defined but never used.","'created' is assigned a value but never used.","'updated' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateId'. Either include it or remove the dependency array.","ArrayExpression",["166"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},"Update the dependencies array to be: [updateId]",{"range":"169","text":"170"},[3268,3270],"[updateId]"]
>>>>>>> 7656633360f14f31f1f8069c6e172265181d3ae5
