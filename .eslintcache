[{"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/index.js":"1","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/App.js":"2","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/ProtectedRoute.js":"3","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/Drawer.js":"4","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Login/Login.js":"5","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Section/Sections.js":"6","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Dashboard/Dashboard.js":"7","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Admins.js":"8","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/Classes.js":"9","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/Students.js":"10","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Report/Reports.js":"11","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/api/api.js":"12","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Row.js":"13","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddModal.js":"14","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddSuccessModal.js":"15","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteModal.js":"16","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateModal.js":"17","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateSuccessModal.js":"18","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteSuccessModal.js":"19","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/api/api.js":"20","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/Row.js":"21","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/Row.js":"22","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/api/api.js":"23","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/AddModal.js":"24","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Section/api/api.js":"25","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/AddSuccessModal.js":"26","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/DeleteModal.js":"27","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/DeleteSuccessModal.js":"28","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/UpdateModal.js":"29","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/UpdateSuccessModal.js":"30","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Report/api/api.js":"31","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Login/api/api.js":"32"},{"size":141,"mtime":1609303254377,"results":"33","hashOfConfig":"34"},{"size":1304,"mtime":1609851314782,"results":"35","hashOfConfig":"34"},{"size":303,"mtime":1610988480421,"results":"36","hashOfConfig":"34"},{"size":5232,"mtime":1611315931518,"results":"37","hashOfConfig":"34"},{"size":3549,"mtime":1610988581309,"results":"38","hashOfConfig":"34"},{"size":1502,"mtime":1609851254574,"results":"39","hashOfConfig":"34"},{"size":1508,"mtime":1609851253304,"results":"40","hashOfConfig":"34"},{"size":11266,"mtime":1610947890436,"results":"41","hashOfConfig":"34"},{"size":3997,"mtime":1609927178113,"results":"42","hashOfConfig":"34"},{"size":6214,"mtime":1611315990979,"results":"43","hashOfConfig":"34"},{"size":15827,"mtime":1610963195709,"results":"44","hashOfConfig":"34"},{"size":1124,"mtime":1609853043789,"results":"45","hashOfConfig":"34"},{"size":2152,"mtime":1609859438966,"results":"46","hashOfConfig":"34"},{"size":3937,"mtime":1609856802175,"results":"47","hashOfConfig":"34"},{"size":1546,"mtime":1609856902046,"results":"48","hashOfConfig":"34"},{"size":1801,"mtime":1609857077375,"results":"49","hashOfConfig":"34"},{"size":4004,"mtime":1609857456944,"results":"50","hashOfConfig":"34"},{"size":1569,"mtime":1609857562425,"results":"51","hashOfConfig":"34"},{"size":1572,"mtime":1609857238377,"results":"52","hashOfConfig":"34"},{"size":184,"mtime":1609926579185,"results":"53","hashOfConfig":"34"},{"size":1950,"mtime":1609927330541,"results":"54","hashOfConfig":"34"},{"size":3193,"mtime":1611316102143,"results":"55","hashOfConfig":"34"},{"size":1941,"mtime":1610979711170,"results":"56","hashOfConfig":"34"},{"size":9695,"mtime":1610719479418,"results":"57","hashOfConfig":"34"},{"size":386,"mtime":1610959535550,"results":"58","hashOfConfig":"34"},{"size":1678,"mtime":1610302708152,"results":"59","hashOfConfig":"34"},{"size":2818,"mtime":1610426070308,"results":"60","hashOfConfig":"34"},{"size":1586,"mtime":1610295156770,"results":"61","hashOfConfig":"34"},{"size":10597,"mtime":1610426048569,"results":"62","hashOfConfig":"34"},{"size":1711,"mtime":1610303643546,"results":"63","hashOfConfig":"34"},{"size":626,"mtime":1610959374480,"results":"64","hashOfConfig":"34"},{"size":331,"mtime":1610974044632,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"p1ynda",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/index.js",[],["134","135"],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/App.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/ProtectedRoute.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/Drawer.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Login/Login.js",["136"],"import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { adminLoginApi } from './api/api'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n\n  mainHeader: {\n    margin: `${theme.spacing(1)}px auto`,\n    textAlign: \"center\",\n    marginBottom: 20\n  },\n  main: {\n    margin: `${theme.spacing(1)}px auto`,\n  }\n}));\n\n\nexport default function Login(props) {\n  const classes = useStyles();\n  const { history } = props\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [error, setError] = useState(null);\n\n  const loginAdmin = async e => {\n    setError(null);\n    e.preventDefault();\n    const data = await adminLoginApi(email, password);\n    if (data.error) {\n      setError('Wrong email or password');\n      return;\n    }\n    localStorage.setItem('token', data.access_token);\n    history.push('/')\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      history.push('/')\n    }\n  }, [])\n\n  const handleFormChange = (e) => {\n    e.target.id === \"email\" && setEmail(e.target.value);\n    e.target.id === \"password\" && setPassword(e.target.value);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid className={classes.main} container wrap=\"nowrap\" spacing={2}>\n          <Grid item xs zeroMinWidth>\n            <Typography className={classes.mainHeader} variant=\"h3\">\n              Admin's Login\n            </Typography>\n            {error && <Typography color=\"secondary\" className={classes.mainHeader} variant=\"h6\">\n              {error}\n            </Typography>}\n            <form onSubmit={loginAdmin}>\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }}>\n                <InputLabel htmlFor=\"email\">Email</InputLabel>\n                <Input\n                  placeholder=\"e.g. johndoe@email.com\"\n                  type=\"email\"\n                  required\n                  style={{ width: '100%' }}\n                  id=\"email\"\n                  value={email}\n                  onChange={handleFormChange}\n                  aria-describedby=\"Email-text\"\n                />\n              </FormControl>\n              <FormControl style={{ display: 'block', width: '400px', marginBottom: '20px' }}>\n                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                <Input\n                  placeholder=\"e.g. 12345678\"\n                  type=\"password\"\n                  required\n                  style={{ width: '100%' }}\n                  id=\"password\"\n                  value={password}\n                  onChange={handleFormChange}\n                  aria-describedby=\"password-text\"\n                />\n              </FormControl>\n              <Button style={{ display: 'block', width: '100%' }} type=\"submit\" variant=\"contained\" color=\"primary\">\n                Login\n                </Button>\n            </form>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Section/Sections.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Dashboard/Dashboard.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Admins.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/Classes.js",["137","138"],"import React, { useState, useEffect } from 'react';\nimport Drawer from '../../Drawer';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Row from './Row';\nimport { getAllClassesApi } from './api/api';\n\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 650,\n  },\n}))\n\nconst Classes = () => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(true);\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [dataChange, setDataChange] = useState(true);\n  const [addClassModal, setAddClassModal] = useState(false);\n\n  useEffect(() => {\n    let active = true;\n    (async () => {\n      setLoading(true);\n      const data = await getAllClassesApi(page);\n      if (!active) {\n        return;\n      }\n      console.log(data);\n      setTotal(Math.ceil(data.total / 10));\n      setRows(data.data);\n      setLoading(false);\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [page, dataChange]);\n\n\n  return (\n    <div className={classes.container}>\n      <Drawer view=\"Classes\" open={[open, setOpen]} />\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n\n        <Button\n          style={{ marginBottom: \"20px\" }}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.button}\n          startIcon={<AddCircleIcon />}\n          onClick={() => setAddClassModal(true)}\n        >\n          Add Class\n      </Button>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                {['Name', 'Created', 'Updated'].map((cell, key) => (\n                  <TableCell key={key} size=\"small\" align=\"left\">{cell}</TableCell>\n                ))}\n                <TableCell size=\"small\" align=\"left\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row, key) =>\n                <Row key={key} props={{\n                  row\n                }} />\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <div style={{ marginTop: 45, display: 'flex', justifyContent: 'center' }}>\n          {loading && <p>Loading...</p>}\n          {rows.length > 0 && <Pagination color=\"primary\" count={total} page={page} onChange={(e, value) => setPage(value)} />}\n\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default Classes\n","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/Students.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Report/Reports.js",["139","140","141"],"import React, { useState, useEffect } from 'react'\nimport Drawer from '../../Drawer'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Pie } from 'react-chartjs-2';\nimport randomColor from 'randomcolor';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers'\nimport { getAllSectionsNoPaginateApi, getAllStudentsFromSection } from '../Section/api/api';\nimport { allSectionsReportApi, oneSectionsReportApi, oneStudentReportApi } from './api/api';\n\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  select: {\n    // margin: theme.spacing(1),\n    marginBottom: -5,\n    marginRight: 20,\n    minWidth: 120,\n  },\n}))\n\nconst Reports = () => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(true);\n\n  const [reportChoice, setReportChoice] = useState(null);\n\n  const [data, setData] = useState({});\n\n  const [sectionId, setSectionId] = useState('');\n\n  const [sections, setSections] = useState([]);\n\n  const [studentId, setStudentId] = useState('');\n\n  const [students, setStudents] = useState([]);\n\n  const [showReport, setShowReport] = useState(false);\n\n  const [selectedFromDate, setSelectedFromDate] = useState(null);\n  const [from, setFrom] = useState(null);\n  const [to, setTo] = useState(null);\n  const [selectedToDate, setSelectedToDate] = useState(null);\n\n  const generateSections = async () => {\n    const data = await getAllSectionsNoPaginateApi();\n    setSections(data);\n  }\n\n  const generateReport = async () => {\n    const data = await allSectionsReportApi();\n    const stats = [\n      data[0].Absent,\n      data[0].Late,\n      data[0].Present,\n    ]\n    setData({\n      labels: [\n        'Absent',\n        'Late',\n        'Present'\n      ],\n      datasets: [{\n        data: stats,\n        backgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56'\n        ],\n        hoverBackgroundColor: [\n          '#FF63A9',\n          '#36A2FF',\n          '#FFCE6F'\n        ]\n      }]\n    });\n    setShowReport(true);\n  }\n\n  const handleSectionChange = async e => {\n    setSectionId(e.target.value);\n    const data = await getAllStudentsFromSection(e.target.value);\n    setStudents(data);\n  }\n\n  const handleStudentChange = async e => {\n    setStudentId(e.target.value);\n    setShowReport(true);\n    const data = await oneStudentReportApi(e.target.value, from, to);\n    const stats = [\n      data[0].Absent,\n      data[0].Late,\n      data[0].Present,\n    ]\n    setData({\n      labels: [\n        'Absent',\n        'Late',\n        'Present'\n      ],\n      datasets: [{\n        data: stats,\n        backgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56'\n        ],\n        hoverBackgroundColor: [\n          '#FF63A9',\n          '#36A2FF',\n          '#FFCE6F'\n        ]\n      }]\n    });\n  }\n\n  const handleSelectChange = async e => {\n    setSectionId(e.target.value);\n    setShowReport(true);\n    const data = await oneSectionsReportApi(e.target.value, from, to);\n    const stats = [\n      data[0].Absent,\n      data[0].Late,\n      data[0].Present,\n    ]\n    setData({\n      labels: [\n        'Absent',\n        'Late',\n        'Present'\n      ],\n      datasets: [{\n        data: stats,\n        backgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56'\n        ],\n        hoverBackgroundColor: [\n          '#FF63A9',\n          '#36A2FF',\n          '#FFCE6F'\n        ]\n      }]\n    });\n  }\n  const handleDateFromChange = async date => {\n    setSelectedFromDate(date);\n    let date1 = new Date(date);\n    let month = date1.getMonth() + 1;\n    let day = date1.getDate();\n    if (month < 10) {\n      month = '0' + month.toString();\n    }\n    if (day < 10) {\n      day = '0' + day.toString();\n    }\n    setFrom(`${date1.getFullYear()}-${month}-${day}`);\n    let fromDate = `${date1.getFullYear()}-${month}-${day}`;\n    if (studentId && to) {\n      const data = await oneStudentReportApi(studentId, fromDate, to);\n      const stats = [\n        data[0].Absent,\n        data[0].Late,\n        data[0].Present,\n      ]\n      setData({\n        labels: [\n          'Absent',\n          'Late',\n          'Present'\n        ],\n        datasets: [{\n          data: stats,\n          backgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56'\n          ],\n          hoverBackgroundColor: [\n            '#FF63A9',\n            '#36A2FF',\n            '#FFCE6F'\n          ]\n        }]\n      });\n      return;\n    }\n    if (sectionId && to) {\n      const data = await oneSectionsReportApi(sectionId, fromDate, to);\n      const stats = [\n        data[0].Absent,\n        data[0].Late,\n        data[0].Present,\n      ]\n      setData({\n        labels: [\n          'Absent',\n          'Late',\n          'Present'\n        ],\n        datasets: [{\n          data: stats,\n          backgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56'\n          ],\n          hoverBackgroundColor: [\n            '#FF63A9',\n            '#36A2FF',\n            '#FFCE6F'\n          ]\n        }]\n      });\n    }\n  };\n\n\n  const handleDateToChange = async date => {\n    setSelectedToDate(date);\n    let date2 = new Date(date);\n    let month = date2.getMonth() + 1;\n    let day = date2.getDate();\n    if (month < 10) {\n      month = '0' + month.toString();\n    }\n    if (day < 10) {\n      day = '0' + day.toString();\n    }\n    setTo(`${date2.getFullYear()}-${month}-${day}`);\n    let toDate = `${date2.getFullYear()}-${month}-${day}`;\n    if (studentId && from) {\n      const data = await oneStudentReportApi(studentId, from, toDate);\n      const stats = [\n        data[0].Absent,\n        data[0].Late,\n        data[0].Present,\n      ]\n      setData({\n        labels: [\n          'Absent',\n          'Late',\n          'Present'\n        ],\n        datasets: [{\n          data: stats,\n          backgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56'\n          ],\n          hoverBackgroundColor: [\n            '#FF63A9',\n            '#36A2FF',\n            '#FFCE6F'\n          ]\n        }]\n      });\n      return\n    }\n    if (sectionId && from) {\n      const data = await oneSectionsReportApi(sectionId, from, toDate);\n      const stats = [\n        data[0].Absent,\n        data[0].Late,\n        data[0].Present,\n      ]\n      setData({\n        labels: [\n          'Absent',\n          'Late',\n          'Present'\n        ],\n        datasets: [{\n          data: stats,\n          backgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56'\n          ],\n          hoverBackgroundColor: [\n            '#FF63A9',\n            '#36A2FF',\n            '#FFCE6F'\n          ]\n        }]\n      });\n    }\n  };\n\n  return (\n    <div className={classes.container}>\n      <Drawer view=\"Generate Reports\" open={[open, setOpen]} />\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <Button\n            style={{ marginBottom: \"20px\" }}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            className={classes.button}\n            startIcon={<AssessmentIcon />}\n            onClick={() => {\n              setSectionId(null);\n              setStudentId(null);\n              setSelectedFromDate(null);\n              setSelectedToDate(null);\n              setFrom(null)\n              setTo(null)\n              setShowReport(false);\n              setReportChoice(\"sections\");\n              setStudents([])\n              generateReport();\n            }}\n          >\n            For All Sections\n        </Button>\n\n          <Button\n            style={{ margin: \"0 20px 20px 20px\" }}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            className={classes.button}\n            startIcon={<AssessmentIcon />}\n            onClick={() => {\n              setSectionId(null);\n              setStudentId(null);\n              setSelectedFromDate(null);\n              setSelectedToDate(null);\n              setFrom(null)\n              setTo(null)\n              setReportChoice(\"section\");\n              setShowReport(false);\n              setStudents([])\n              generateSections();\n            }}\n          >\n            For a Section\n        </Button>\n          <Button\n\n            style={{ marginBottom: \"20px\" }}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            className={classes.button}\n            startIcon={<AssessmentIcon />}\n            onClick={() => {\n              setSectionId(null);\n              setStudentId(null);\n              setFrom(null)\n              setTo(null)\n              setSelectedFromDate(null);\n              setSelectedToDate(null);\n              setShowReport(false);\n              setReportChoice(\"student\");\n              generateSections();\n            }}\n          >\n            For a Student\n        </Button>\n        </div>\n        {reportChoice && reportChoice === \"sections\" && showReport && (\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <div style={{ display: 'flex', width: 600, justifyContent: 'center' }}>\n              <Pie data={data} />\n            </div>\n          </div>\n        )}\n        {reportChoice && reportChoice === \"section\" &&\n          (<div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <FormControl className={classes.select}>\n                <InputLabel id=\"demo-simple-select-label\">Section</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"section\"\n                  value={sectionId}\n                  onChange={handleSelectChange}\n                >\n                  {sections.map((section, key) => (\n                    <MenuItem key={key} value={section.id}>{section.name}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  margin=\"normal\"\n                  id=\"date-picker-inline\"\n                  maxDate={selectedToDate}\n                  minDateMessage=\"From date should be before to date\"\n                  label=\"From\"\n                  style={{ marginRight: 20 }}\n                  value={selectedFromDate}\n                  onChange={handleDateFromChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  margin=\"normal\"\n                  id=\"date-picker-inline2\"\n                  minDate={selectedFromDate}\n                  minDateMessage=\"To date should be after from date\"\n                  label=\"To\"\n                  value={selectedToDate}\n                  onChange={handleDateToChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </div>\n            {showReport && (\n              <div style={{ display: 'flex', width: 600, justifyContent: 'center' }}>\n                <Pie data={data} />\n              </div>\n            )}\n          </div>)}\n        {reportChoice && reportChoice === \"student\" && (<div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <FormControl className={classes.select}>\n              <InputLabel id=\"demo-simple-select-label\">Section</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"section\"\n                value={sectionId}\n                onChange={handleSectionChange}\n              >\n                {sections.map((section, key) => (\n                  <MenuItem key={key} value={section.id}>{section.name}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.select}>\n              <InputLabel id=\"demo-simple-select-label\">Student</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"student\"\n                value={studentId}\n                onChange={handleStudentChange}\n              >\n                {students.map((student, key) => (\n                  <MenuItem key={key} value={student.id}>{student.student_id}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                maxDate={selectedToDate}\n                minDateMessage=\"From date should be before to date\"\n                label=\"From\"\n                style={{ marginRight: 20 }}\n                value={selectedFromDate}\n                onChange={handleDateFromChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </MuiPickersUtilsProvider>\n\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline2\"\n                minDate={selectedFromDate}\n                minDateMessage=\"To date should be after from date\"\n                label=\"To\"\n                value={selectedToDate}\n                onChange={handleDateToChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </MuiPickersUtilsProvider>\n          </div>\n          {showReport && (\n            <div style={{ display: 'flex', width: 600, justifyContent: 'center' }}>\n              <Pie data={data} />\n            </div>\n          )}\n        </div>)}\n      </main>\n    </div>\n  )\n}\n\nexport default Reports\n","/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/api/api.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/Row.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/AddSuccessModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/UpdateSuccessModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Admin/modals/DeleteSuccessModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/api/api.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Class/Row.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/Row.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/api/api.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/AddModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Section/api/api.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/AddSuccessModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/DeleteModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/DeleteSuccessModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/UpdateModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Student/modals/UpdateSuccessModal.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Report/api/api.js",[],"/home/agha/Desktop/LMS-dreamTeam-Frontend/src/components/Login/api/api.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":59,"column":6,"nodeType":"148","endLine":59,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":64,"column":22,"nodeType":"152","messageId":"153","endLine":64,"endColumn":35},{"ruleId":"150","severity":1,"message":"154","line":65,"column":10,"nodeType":"152","messageId":"153","endLine":65,"endColumn":23},{"ruleId":"150","severity":1,"message":"155","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"156","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":19},{"ruleId":"150","severity":1,"message":"157","line":9,"column":8,"nodeType":"152","messageId":"153","endLine":9,"endColumn":13},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["160"],"no-unused-vars","'setDataChange' is assigned a value but never used.","Identifier","unusedVar","'addClassModal' is assigned a value but never used.","'useEffect' is defined but never used.","'randomColor' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},"Update the dependencies array to be: [history]",{"range":"163","text":"164"},[1531,1533],"[history]"]